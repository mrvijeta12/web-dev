<?php
include_once "session.php";
check_login();
include_once 'database.php';


// Fetch all blog posts with slug, summary, and feature image
$sql = "SELECT id, slug,  category FROM webdev_blogs WHERE category = 'blog' ORDER BY id DESC";
$result = $conn->query($sql);

// Check if the query was successful
if ($result === false) {
    die("SQL Error: " . $conn->error); // Output the error message
}

$contents = [];
if ($result->num_rows > 0) {
    while ($row = $result->fetch_assoc()) {
        $contents[] = $row;
    }
} else {
    $contents[] = ["id" => 0, "slug" => "No content found.", "category" => ""];
}

$conn->close();
?>

<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Dynamic Content Layout</title>
    <link rel="stylesheet" href="assets/css/dashboard.css">
    <script>
        function handleContainerClick(event, slug) {
            if (!event.target.classList.contains('edit-button')) {
                // Redirecting to viewContent.php with the slug
                window.location.href = 'insights?slug=' + encodeURIComponent(slug);
            }
        }
    </script>

</head>

<body>
    <?php include "navbar.php"; ?>


    <!-- Blog Categories -->
    <div class="form-group">
        <label for="category">Choose Category:-</label>
        <input type="text" name="category" id="" placeholder="Search Category">

    </div>

    <?php
    $start = 1; // Initialize start number

    foreach ($contents as $row):
        $slug = htmlspecialchars($row['slug']);
        $id = $row['id'];
        $category = htmlspecialchars($row['category']);
    ?>
        <div class='content-container' onclick='handleContainerClick(event, "<?= $slug ?>")'>
            <div class='text-content'>
                <ol start="<?= $start ?>">
                    <li><?= $slug ?></li>
                </ol>
                <p> Category:- <?= $category ?> </p>
            </div>

            <!-- Edit Button -->
            <?php if ($id > 0): ?>
                <form method='GET' action='editblog' class='edit-form'>
                    <input type='hidden' name='slug' value='<?= $slug ?>'>
                    <button type='submit' class='edit-button'>Edit</button>
                </form>
            <?php endif; ?>
        </div>

    <?php
        $start++; // Increment start number for the next <ol>
    endforeach;
    ?>

</body>

</html>


========= new added ========

<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Dynamic Content Layout</title>
    <link rel="stylesheet" href="assets/css/dashboard.css">
    <script>
        // Function to fetch blogs from the server based on the category input
        function fetchBlogs(category) {
            const xhr = new XMLHttpRequest();
            xhr.open('GET', `fetch_blogs.php?category=${encodeURIComponent(category)}`, true);
            xhr.onload = function() {
                if (xhr.status === 200) {
                    const blogs = JSON.parse(xhr.responseText);
                    renderBlogs(blogs);
                }
            };
            xhr.send();
        }

        // Function to render the blogs dynamically
        function renderBlogs(blogs) {
            const container = document.getElementById('blog-container');
            container.innerHTML = ''; // Clear existing content

            if (blogs.length === 0) {
                container.innerHTML = '<p>No blogs found for this category.</p>';
                return;
            }

            let start = 1;
            blogs.forEach(blog => {
                const blogHTML = `
                    <div class='content-container' onclick='handleContainerClick(event, "${blog.slug}")'>
                        <div class='text-content'>
                            <ol start="${start}">
                                <li>${blog.slug}</li>
                            </ol>
                            <p>Category: ${blog.category}</p>
                        </div>
                        ${blog.id > 0 ? `
                        <form method='GET' action='editblog' class='edit-form'>
                            <input type='hidden' name='slug' value='${blog.slug}'>
                            <button type='submit' class='edit-button'>Edit</button>
                        </form>` : ''}
                    </div>
                `;
                container.innerHTML += blogHTML;
                start++;
            });
        }

        // Add event listener to the input field for live searching
        document.addEventListener('DOMContentLoaded', () => {
            const categoryInput = document.querySelector('input[name="category"]');

            categoryInput.addEventListener('input', () => {
                const category = categoryInput.value.trim();
                fetchBlogs(category || 'blog'); // Default to "blog" if input is empty
            });

            // Fetch default blogs on page load
            fetchBlogs('blog');
        });

        // Function to handle container clicks (view blog details)
        function handleContainerClick(event, slug) {
            if (!event.target.classList.contains('edit-button')) {
                window.location.href = 'insights?slug=' + encodeURIComponent(slug);
            }
        }
    </script>
</head>

<body>
    <?php include "navbar.php"; ?>

    <!-- Blog Categories -->
    <div class="form-group">
        <label for="category">Search Category:</label>
        <input type="text" name="category" placeholder="Search Category">
    </div>

    <!-- Blog Content -->
    <div id="blog-container"></div>
</body>

</html>

================== fetch data ===========  


<?php
include_once 'session.php';
include_once 'database.php';

check_login();

// Get the category from the AJAX request
$category = isset($_GET['category']) ? trim($_GET['category']) : 'blog';

// Fetch blogs matching the category (with wildcard search)
$sql = "SELECT id, slug, category FROM webdev_blogs WHERE category LIKE ? ORDER BY id DESC";
$stmt = $conn->prepare($sql);
$searchTerm = '%' . $category . '%';
$stmt->bind_param("s", $searchTerm);
$stmt->execute();
$result = $stmt->get_result();

$contents = [];
if ($result->num_rows > 0) {
    while ($row = $result->fetch_assoc()) {
        $contents[] = $row;
    }
}

// Return the results as JSON
header('Content-Type: application/json');
echo json_encode($contents);

$stmt->close();
$conn->close();


======== live search ======== 

<?php
include_once "session.php";
check_login();
include_once 'database.php';


// Fetch all blog posts with slug, summary, and feature image
$sql = "SELECT id, slug,  category FROM webdev_blogs WHERE category = 'blog' ORDER BY id DESC";
$result = $conn->query($sql);

// Check if the query was successful
if ($result === false) {
    die("SQL Error: " . $conn->error); // Output the error message
}

$contents = [];
if ($result->num_rows > 0) {
    while ($row = $result->fetch_assoc()) {
        $contents[] = $row;
    }
} else {
    $contents[] = ["id" => 0, "slug" => "No content found.", "category" => ""];
}

$conn->close();
?>

<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Dynamic Content Layout</title>
    <link rel="stylesheet" href="assets/css/dashboard.css">
    <script>
        function handleContainerClick(event, slug) {
            if (!event.target.classList.contains('edit-button')) {
                // Redirecting to viewContent.php with the slug
                window.location.href = 'insights?slug=' + encodeURIComponent(slug);
            }
        }
    </script>

</head>

<body>
    <?php include "navbar.php"; ?>


    <!-- Blog Categories -->
    <!-- Blog Pages -->
    <div class="form-group">
        <label for="category">Choose Category:-</label>
        <select id="category" name="category" class="page-type">
            <optgroup label="Main Page">
                <option value="home">Home</option>
                <option value="services">Services</option>
                <option value="blog" selected>Blog</option>
                <option value="contact-us">Contact Us</option>

            </optgroup>
            <optgroup label="Industries">
                <option value="on-demand">On Demand</option>
                <option value="healthcare">Healthcare</option>
                <option value="restaurant">Restaurant</option>
                <option value="entertainment">Entertainment</option>
                <option value="travel">Travel</option>
                <option value="oil-and-gas">Oil and Gas</option>
                <option value="telecom">Telecom</option>
                <option value="construction">Construction</option>
                <option value="ecommerce">eCommerce</option>
                <option value="saas">SaaS</option>
                <option value="finance">Finance</option>
                <option value="social-networking">Social Networking</option>
                <option value="banking">Banking</option>
                <option value="insurance">Insurance</option>
                <option value="retail">Retail</option>
                <option value="real-estate">Real Estate</option>
                <option value="education">Education</option>
                <option value="news">News</option>
                <option value="logistics">Logistics</option>
                <option value="agriculture">Agriculture</option>
                <option value="manufacturing">Manufacturing</option>
            </optgroup>
            <optgroup label="Offshore Experts">

                <option value="html-developer">HTML Developer</option>
                <option value="javascript-developer">JavaScript Developer</option>
                <option value="angularjs-developer">AngularJS Developer</option>
                <option value="reactjs-developer">ReactJS Developer</option>
                <option value="vuejs-developer">VueJS Developer</option>
                <option value="wordpress-developer">WordPress</option>
                <option value="drupal-developer">Drupal</option>
                <option value="joomla-developer">Joomla</option>
                <option value="magneto-developer">Magneto</option>
                <option value="shopify-developer">Shopify</option>
                <option value="prestashop-developer">PrestaShop</option>
                <option value="php-developer">PHP</option>
                <option value="codeigniter-developer">CodeIgniter</option>
                <option value="laravel-developer">Laravel</option>
                <option value="nodejs-developer">NodeJS</option>
                <option value="web-developer">Web Developer</option>

            </optgroup>

            <optgroup label="Our Expertise">
                <option value="frontend-development">Frontend Development</option>
                <option value="angularjs">Angular.js</option>
                <option value="reactjs">React.js</option>
                <option value="javascript">JavaScript</option>
                <option value="vuejs">Vue.js</option>
                <option value="wordpress">WordPress</option>
                <option value="drupal">Drupal</option>
                <option value="joomla">Joomla</option>
                <option value="php">PHP</option>
                <option value="codeigniter">CodeIgniter</option>
                <option value="laravel">Laravel</option>
                <option value="nodejs">NodeJS</option>
                <option value="pwa">PWA</option>
                <option value="jquery">jQuery</option>
                <option value="python">Python</option>
                <option value="mern-stack">MERN Stack</option>
                <option value="mean-stack">MEAN Stack</option>
                <option value="magneto">Magneto</option>
                <option value="shopify">Shopify</option>
                <option value="prestashop">PrestaShop</option>


            </optgroup>


            <optgroup label="Web Services">
                <option value="cms">CMS</option>
                <option value="erp">ERP</option>
                <option value="crm">CRM</option>
                <option value="lms">LMS</option>
                <option value="e-commerce">E-COMMERCE</option>
                <option value="pim">PIM</option>
                <option value="bpm">BPM</option>
                <option value="scm">SCM</option>
                <option value="hrm">HRM</option>
                <option value="dms">DMS</option>
                <option value="bi">BI</option>
                <option value="web-app-dev">Web App Dev</option>
                <option value="cxm">CXM</option>
                <option value="booking-and-reservation">Booking & Reservation</option>



            </optgroup>
        </select>

    </div>

    <?php
    $start = 1; // Initialize start number

    foreach ($contents as $row):
        $slug = htmlspecialchars($row['slug']);
        $id = $row['id'];
        $category = htmlspecialchars($row['category']);
    ?>
        <div class='content-container' onclick='handleContainerClick(event, "<?= $slug ?>")'>
            <div class='text-content'>
                <ol start="<?= $start ?>">
                    <li><?= $slug ?></li>
                </ol>
                <p> Category:- <?= $category ?> </p>
            </div>

            <!-- Edit Button -->
            <?php if ($id > 0): ?>
                <form method='GET' action='editblog' class='edit-form'>
                    <input type='hidden' name='slug' value='<?= $slug ?>'>
                    <button type='submit' class='edit-button'>Edit</button>
                </form>
            <?php endif; ?>
        </div>

    <?php
        $start++; // Increment start number for the next <ol>
    endforeach;
    ?>

</body>

</html>


//! date and time
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Dynamic Content Layout</title>
    <link rel="stylesheet" href="assets/css/dashboard.css">
    <script>
        // Function to fetch blogs dynamically based on the selected category
        function fetchBlogs(category) {
            const xhr = new XMLHttpRequest();
            xhr.open('GET', `fetch_blogs.php?category=${encodeURIComponent(category)}`, true);
            xhr.onload = function() {
                if (xhr.status === 200) {
                    const blogs = JSON.parse(xhr.responseText);
                    renderBlogs(blogs);
                }
            };
            xhr.send();
        }

        // Function to render blogs dynamically in the DOM
        function renderBlogs(blogs) {
            const container = document.getElementById('blog-container');
            container.innerHTML = ''; // Clear existing content

            if (blogs.length === 0) {
                container.innerHTML = '<p>No blogs found for this category.</p>';
                return;
            }

            let start = 1;
            blogs.forEach(blog => {
                const blogHTML = `
                    <div class='content-container' onclick='handleContainerClick(event, "${blog.slug}")'>
                        <div class='text-content'>
                        <p>  ${blog.category}  </p>
                            <ol start="${start}">
                                <li>${blog.slug}</li>
                            </ol>
                            <p>${blog.blog_date}</p>
                        </div>
                        ${blog.id > 0 ? `
                        <form method='GET' action='editblog' class='edit-form'>
                            <input type='hidden' name='slug' value='${blog.slug}'>
                            <button type='submit' class='edit-button'>Edit</button>
                        </form>` : ''}
                    </div>
                `;
                container.innerHTML += blogHTML;
                start++;
            });
        }

        // Add event listener for category selection
        document.addEventListener('DOMContentLoaded', () => {
            const categorySelect = document.getElementById('category');

            // Fetch default blogs for "blog" category on page load
            fetchBlogs('blog');

            // Listen for changes in the dropdown
            categorySelect.addEventListener('change', () => {
                const selectedCategory = categorySelect.value;
                fetchBlogs(selectedCategory);
            });
        });

        // Handle redirection for blog content
        function handleContainerClick(event, slug) {
            if (!event.target.classList.contains('edit-button')) {
                window.location.href = 'insights?slug=' + encodeURIComponent(slug);
            }
        }
    </script>
</head>

<body>
    <?php include "navbar.php"; ?>

    <!-- Blog Pages -->
    <div class="form-group">
        <label for="category">Choose Category:-</label>
        <select id="category" name="category" class="page-type">
            <optgroup label="Main Page">
                <option value="home">Home</option>
                <option value="services">Services</option>
                <option value="blog" selected>Blog</option>
                <option value="contact-us">Contact Us</option>

            </optgroup>
            <optgroup label="Industries">
                <option value="on-demand">On Demand</option>
                <option value="healthcare">Healthcare</option>
                <option value="restaurant">Restaurant</option>
                <option value="entertainment">Entertainment</option>
                <option value="travel">Travel</option>
                <option value="oil-and-gas">Oil and Gas</option>
                <option value="telecom">Telecom</option>
                <option value="construction">Construction</option>
                <option value="ecommerce">eCommerce</option>
                <option value="saas">SaaS</option>
                <option value="finance">Finance</option>
                <option value="social-networking">Social Networking</option>
                <option value="banking">Banking</option>
                <option value="insurance">Insurance</option>
                <option value="retail">Retail</option>
                <option value="real-estate">Real Estate</option>
                <option value="education">Education</option>
                <option value="news">News</option>
                <option value="logistics">Logistics</option>
                <option value="agriculture">Agriculture</option>
                <option value="manufacturing">Manufacturing</option>
            </optgroup>
            <optgroup label="Offshore Experts">

                <option value="html-developer">HTML Developer</option>
                <option value="javascript-developer">JavaScript Developer</option>
                <option value="angularjs-developer">AngularJS Developer</option>
                <option value="reactjs-developer">ReactJS Developer</option>
                <option value="vuejs-developer">VueJS Developer</option>
                <option value="wordpress-developer">WordPress</option>
                <option value="drupal-developer">Drupal</option>
                <option value="joomla-developer">Joomla</option>
                <option value="magneto-developer">Magneto</option>
                <option value="shopify-developer">Shopify</option>
                <option value="prestashop-developer">PrestaShop</option>
                <option value="php-developer">PHP</option>
                <option value="codeigniter-developer">CodeIgniter</option>
                <option value="laravel-developer">Laravel</option>
                <option value="nodejs-developer">NodeJS</option>
                <option value="web-developer">Web Developer</option>

            </optgroup>

            <optgroup label="Our Expertise">
                <option value="frontend-development">Frontend Development</option>
                <option value="angularjs">Angular.js</option>
                <option value="reactjs">React.js</option>
                <option value="javascript">JavaScript</option>
                <option value="vuejs">Vue.js</option>
                <option value="wordpress">WordPress</option>
                <option value="drupal">Drupal</option>
                <option value="joomla">Joomla</option>
                <option value="php">PHP</option>
                <option value="codeigniter">CodeIgniter</option>
                <option value="laravel">Laravel</option>
                <option value="nodejs">NodeJS</option>
                <option value="pwa">PWA</option>
                <option value="jquery">jQuery</option>
                <option value="python">Python</option>
                <option value="mern-stack">MERN Stack</option>
                <option value="mean-stack">MEAN Stack</option>
                <option value="magneto">Magneto</option>
                <option value="shopify">Shopify</option>
                <option value="prestashop">PrestaShop</option>


            </optgroup>


            <optgroup label="Web Services">
                <option value="cms">CMS</option>
                <option value="erp">ERP</option>
                <option value="crm">CRM</option>
                <option value="lms">LMS</option>
                <option value="e-commerce">E-COMMERCE</option>
                <option value="pim">PIM</option>
                <option value="bpm">BPM</option>
                <option value="scm">SCM</option>
                <option value="hrm">HRM</option>
                <option value="dms">DMS</option>
                <option value="bi">BI</option>
                <option value="web-app-dev">Web App Dev</option>
                <option value="cxm">CXM</option>
                <option value="booking-and-reservation">Booking & Reservation</option>



            </optgroup>
        </select>

    </div>

    <!-- Blog Content -->
    <div id="blog-container"></div>
</body>

</html>

//! post add blog
<?php
include_once "session.php";
check_login();

include_once 'database.php';

// Check if form is submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {

    // Sanitize input fields
    $meta_title = isset($_POST['meta_title']) ? $conn->real_escape_string($_POST['meta_title']) : '';
    $summary = isset($_POST['summary']) ? $conn->real_escape_string($_POST['summary']) : '';
    $content = isset($_POST['editorContent']) ? $conn->real_escape_string($_POST['editorContent']) : '';
    $category = isset($_POST['category']) ? $conn->real_escape_string($_POST['category']) : '';

    // Handle feature image upload
    $featureImagePath = '';
    if (isset($_FILES['social_sharing_image']) && $_FILES['social_sharing_image']['error'] === UPLOAD_ERR_OK) {
        $imageTmpName = $_FILES['social_sharing_image']['tmp_name'];
        $imageName = $_FILES['social_sharing_image']['name'];
        $imageError = $_FILES['social_sharing_image']['error'];

        // Get the image file extension
        $imageExt = strtolower(pathinfo($imageName, PATHINFO_EXTENSION));

        // Define allowed file types
        $allowed = ['jpg', 'jpeg', 'png', 'gif'];

        if (in_array($imageExt, $allowed)) {
            // Define a new unique name for the image file
            $imageNewName = uniqid('', true) . '.' . $imageExt;
            $imageDestination = 'uploads/' . $imageNewName;

            // Move the uploaded file to the desired folder
            if (move_uploaded_file($imageTmpName, $imageDestination)) {
                // File successfully uploaded, proceed to insert into the database
                $featureImagePath = $imageDestination;
            } else {
                echo "Error uploading the file.";
                exit;
            }
        } else {
            echo "Invalid file type.";
            exit;
        }
    } else {
        echo "Image upload error: " . $_FILES['social_sharing_image']['error'];
        exit;
    }

    // Generate slug from meta_title
    $slug = strtolower(trim(preg_replace('/[^A-Za-z0-9-]+/', '-', $meta_title)));

    // Remove leading dashes if present
    $slug = ltrim($slug, '-');

    // Get current date, time, and datetime
    date_default_timezone_set('Asia/Kolkata');
    $currentDate = date('j F Y'); // Current date in YYYY-MM-DD format
    $currentTime = date('H:i:s'); // Current time in HH:MM:SS format
    $currentDatetime = date('Y-m-d H:i:s'); // Current datetime in YYYY-MM-DD HH:MM:SS format

    // Insert blog data into the database
    $sql = "INSERT INTO webdev_blogs (
        meta_title, 
        summary, 
        content, 
        category, 
        social_sharing_image, 
        slug, 
        blog_date, 
        blog_time, 
        created_at
    ) 
    VALUES (
        '$meta_title', 
        '$summary', 
        '$content', 
        '$category', 
        '$featureImagePath', 
        '$slug', 
        '$currentDate', 
        '$currentTime', 
        '$currentDatetime'
        '$created_at'
    )";

    if ($conn->query($sql) === TRUE) {
        header("Location: dashboard.php");
        exit; // Ensure no further code is executed after redirection
    } else {
        echo "Error: " . $sql . "<br>" . $conn->error;
    }

    // Close connection
    $conn->close();
}


//! 
 // function renderBlogs(blogs) {
        //     const container = document.getElementById('blog-container');
        //     container.innerHTML = ''; // Clear existing content

        //     if (blogs.length === 0) {
        //         container.innerHTML = '<p>No blogs found for this category.</p>';
        //         return;
        //     }

        //     // Create an ordered list (ol) element
        //     const ol = document.createElement('ol');

        //     // Append each blog as a list item (li) inside the ordered list
        //     blogs.forEach((blog, index) => {
        //         const li = document.createElement('li');
        //         li.innerHTML = `
        //             <div class="content-container">
        //                 <div class="text-content">
        //                     <span> ${index + 1}. ${blog.slug}</span><br>
        //                     <p>Category: ${blog.category}</p>
        //                 </div>
        //                 <form method="POST" action="deletebloglogic.php" class="delete-form">
        //                     <input type="hidden" name="delete-id" value="${blog.id}">
        //                     <button type="submit" class="delete-button">Delete</button>
        //                 </form>
        //             </div>
        //         `;
        //         ol.appendChild(li);
        //     });

        //     // Append the ordered list to the container
        //     container.appendChild(ol);
        // }


        //! session code 
        <?php
// check if the session is already running or not
// if (session_status() === PHP_SESSION_NONE) {
//     session_start();
// }
// // Function to check if a user is logged in
// function check_login()
// {
//     if (!isset($_SESSION['email'])) {
//         header("Location: logout.php");
//         exit();
//     }
// }




